{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialCharacters = {};\nconst initialFavorites = [];\nconst slice = createSlice({\n  name: 'characters',\n  initialState: {\n    charactersResponse: initialCharacters,\n    page: 1,\n    search: '',\n    favorites: initialFavorites\n  },\n  reducers: {\n    setCharacters: (state, action) => {\n      if (action.payload.info) {\n        state.charactersResponse = action.payload;\n      } else if (action.payload.id) {\n        state.charactersResponse = {\n          results: [action.payload]\n        };\n      } else if (action.payload instanceof Array) {\n        state.charactersResponse = {\n          results: action.payload\n        };\n      } else {\n        state.charactersResponse = {};\n      }\n    },\n    nextPage: state => {\n      var _state$charactersResp;\n\n      if ((_state$charactersResp = state.charactersResponse.info) !== null && _state$charactersResp !== void 0 && _state$charactersResp.next) state.page += 1;\n    },\n    previousPage: state => {\n      if (state.page > 1) state.page -= 1;\n    },\n    setSearch: (state, action) => {\n      state.search = action.payload;\n    },\n    toggleFavorite: (state, action) => {\n      if (state.favorites.includes(action.payload)) {\n        state.favorites = state.favorites.filter(fav => fav !== action.payload);\n      } else {\n        state.favorites.push(action.payload);\n      }\n    },\n    clearFavorites: state => {\n      state.favorites = [];\n    }\n  }\n}); //#region SELECTORS\n\nexport const charactersSelector = state => state.characters.charactersResponse;\nexport const pageSelector = state => state.characters.page;\nexport const searchSelector = state => state.characters.search;\nexport const favoritesSelector = state => state.characters.favorites; //#endregion\n\nexport const fetchCharacters = () => ({\n  type: 'characters/fetchCharacters'\n});\nexport const fetchFavorites = () => ({\n  type: 'characters/fetchFavorites'\n});\nexport const {\n  setCharacters,\n  nextPage,\n  previousPage,\n  setSearch,\n  toggleFavorite,\n  clearFavorites\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","initialCharacters","initialFavorites","slice","name","initialState","charactersResponse","page","search","favorites","reducers","setCharacters","state","action","payload","info","id","results","Array","nextPage","next","previousPage","setSearch","toggleFavorite","includes","filter","fav","push","clearFavorites","charactersSelector","characters","pageSelector","searchSelector","favoritesSelector","fetchCharacters","type","fetchFavorites","actions","reducer"],"sources":["C:/Users/rmora/Desktop/DigitalHouse/1_Bimestre/Front/CTD-Front_Rec/ctd-esp-front1-final/src/state/characters/index.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport interface ICharacter {\r\n  id: number;\r\n  name: string;\r\n  status: string;\r\n  species: string;\r\n  type: string;\r\n  gender: string;\r\n  origin: {\r\n    name: string;\r\n    url: string;\r\n  };\r\n  location: {\r\n    name: string;\r\n    url: string;\r\n  };\r\n  image: string;\r\n  episode: string[];\r\n  url: string;\r\n  created: string;\r\n}\r\n\r\nexport interface ICharacterQueryResponse {\r\n  info?: {\r\n    count: number;\r\n    pages: number;\r\n    next: string | null;\r\n    prev: string | null;\r\n  };\r\n  results?: ICharacter[];\r\n}\r\n\r\nconst initialCharacters: ICharacterQueryResponse = {};\r\nconst initialFavorites: number[] = [];\r\n\r\nconst slice = createSlice({\r\n  name: 'characters',\r\n  initialState: {\r\n    charactersResponse: initialCharacters,\r\n    page: 1,\r\n    search: '',\r\n    favorites: initialFavorites\r\n  },\r\n  reducers: {\r\n    setCharacters: (state, action) => {\r\n      if (action.payload.info) {\r\n        state.charactersResponse = action.payload;\r\n      } else if (action.payload.id) {\r\n        state.charactersResponse = {\r\n          results: [action.payload]\r\n        };\r\n      } else if (action.payload instanceof Array) {\r\n        state.charactersResponse = {\r\n          results: action.payload\r\n        };\r\n      } else {\r\n        state.charactersResponse = {};\r\n      }\r\n    },\r\n    nextPage: (state) => {\r\n      if (state.charactersResponse.info?.next) state.page += 1;\r\n    },\r\n    previousPage: (state) => {\r\n      if (state.page > 1) state.page -= 1;\r\n    },\r\n    setSearch: (state, action: { type: string; payload: string }) => {\r\n      state.search = action.payload;\r\n    },\r\n    toggleFavorite: (state, action: { type: string; payload: number }) => {\r\n      if (state.favorites.includes(action.payload)) {\r\n        state.favorites = state.favorites.filter(\r\n          (fav) => fav !== action.payload\r\n        );\r\n      } else {\r\n        state.favorites.push(action.payload);\r\n      }\r\n    },\r\n    clearFavorites: (state) => {\r\n      state.favorites = [];\r\n    }\r\n  }\r\n});\r\n\r\n//#region SELECTORS\r\n\r\nexport const charactersSelector = (state: any) =>\r\n  state.characters.charactersResponse as ICharacterQueryResponse;\r\nexport const pageSelector = (state: any) => state.characters.page as number;\r\nexport const searchSelector = (state: any) => state.characters.search as string;\r\nexport const favoritesSelector = (state: any) =>\r\n  state.characters.favorites as number[];\r\n\r\n//#endregion\r\n\r\nexport const fetchCharacters = () => ({ type: 'characters/fetchCharacters' });\r\nexport const fetchFavorites = () => ({ type: 'characters/fetchFavorites' });\r\n\r\nexport const {\r\n  setCharacters,\r\n  nextPage,\r\n  previousPage,\r\n  setSearch,\r\n  toggleFavorite,\r\n  clearFavorites\r\n} = slice.actions;\r\n\r\nexport default slice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}